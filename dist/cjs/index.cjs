"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs"),s=require("lodash"),r=require("path"),t=require("events"),i=require("fs/promises"),n=require("telegram"),o=require("envfile"),a=require("telegram/extensions/index.js"),u=require("telegram/sessions/index.js");function d(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=d(e),m=d(s),f=d(r),c=d(t),p=d(i);const q=e=>m.default.trim(m.default.toString(e),["'",'"']),h=f.default.resolve("./.env"),S=new c.default,v=new a.Logger,P=()=>new Promise((e=>{m.default.isEmpty(S.listeners("RequiresPhoneNumber"))&&(v.error("You need to set a listener on 'RequiresPhoneNumber' event"),process.exit(1)),S.emit("RequiresPhoneNumber",(s=>{v.info(`Phone number is '${s}'`),e(s)}))})),w=e=>new Promise((s=>{v.info("You will receive phone code via "+(e?"App":"SMS")),m.default.isEmpty(S.listeners("RequiresPhoneCode"))&&(v.error("You need to set a listener on 'RequiresPhoneCode' event"),process.exit(1)),S.emit("RequiresPhoneCode",(e=>{s(e)}))})),x=e=>new Promise((s=>{v.info(`The hint for your password is '${e}'`),m.default.isEmpty(S.listeners("RequiresPassword"))&&(v.error("You need to set a listener on 'RequiresPassword' event"),process.exit(1)),S.emit("RequiresPassword",(e=>{s(e)}))})),g=()=>new Promise((e=>{m.default.isEmpty(S.listeners("RequiresFirstAndLastNames"))&&(v.error("You need to set a listener on 'RequiresFirstAndLastNames' event"),process.exit(1)),S.emit("RequiresFirstAndLastNames",(([s,r])=>{v.info(`First name is '${s}'`),v.info(`Last name is '${r}'`),e([s,r])}))})),y=({message:e})=>{v.error(e),process.exit(1)};exports.eventEmitter=S,exports.startSession=(e=!1)=>{try{const s=o.parse(l.default.existsSync(h)?l.default.readFileSync(h):""),r=m.default.toNumber(q(s.API_ID)),t=q(s.API_HASH),i=new u.StringSession(q(s.SESSION||"")),a=new n.TelegramClient(i,r,t);return a.start({phoneNumber:P,phoneCode:w,password:x,firstAndLastNames:g,onError:y,forceSMS:e}).then((()=>p.default.writeFile(h,o.stringify({...s,SESSION:a.session.save()})))).then((()=>{v.info("Modified env file for next usage"),v.info("Successfully connected")})).then((()=>{a.addEventHandler((e=>{S.emit(e.className,e)}))})).then((()=>S)).catch((({message:e})=>{v.error(e),process.exit(1)}))}catch({message:e}){v.error(e),process.exit(1)}};