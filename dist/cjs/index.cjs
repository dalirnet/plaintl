"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs"),s=require("lodash"),r=require("path"),t=require("events"),i=require("fs/promises"),n=require("telegram"),o=require("envfile"),a=require("telegram/extensions/index.js"),u=require("telegram/sessions/index.js");function d(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=d(e),m=d(s),f=d(r),c=d(t),p=d(i);const q=e=>m.default.trim(m.default.toString(e),["'",'"']),h=f.default.resolve("./.env"),v=o.parse(l.default.existsSync(h)?l.default.readFileSync(h):""),P=new c.default,S=new a.Logger,w=()=>new Promise((e=>{m.default.isEmpty(P.listeners("RequiresPhoneNumber"))&&(S.error("You need to set a listener on 'RequiresPhoneNumber' event"),process.exit(1)),P.emit("RequiresPhoneNumber",(s=>{S.info(`Phone number is '${s}'`),e(s)}))})),x=e=>new Promise((s=>{S.info("You will receive phone code via "+(e?"App":"SMS")),m.default.isEmpty(P.listeners("RequiresPhoneCode"))&&(S.error("You need to set a listener on 'RequiresPhoneCode' event"),process.exit(1)),P.emit("RequiresPhoneCode",(e=>{s(e)}))})),g=e=>new Promise((s=>{S.info(`The hint for your password is '${e}'`),m.default.isEmpty(P.listeners("RequiresPassword"))&&(S.error("You need to set a listener on 'RequiresPassword' event"),process.exit(1)),P.emit("RequiresPassword",(e=>{s(e)}))})),y=()=>new Promise((e=>{m.default.isEmpty(P.listeners("RequiresFirstAndLastNames"))&&(S.error("You need to set a listener on 'RequiresFirstAndLastNames' event"),process.exit(1)),P.emit("RequiresFirstAndLastNames",(([s,r])=>{S.info(`First name is '${s}'`),S.info(`Last name is '${r}'`),e([s,r])}))})),N=({message:e})=>{S.error(e),process.exit(1)};exports.eventEmitter=P,exports.startSession=(e=!1)=>{try{const s=m.default.toNumber(q(v.API_ID||process.env.API_ID)),r=q(v.API_HASH||process.env.API_HASH),t=new u.StringSession(q(v.SESSION||"")),i=new n.TelegramClient(t,s,r);return i.start({phoneNumber:w,phoneCode:x,password:g,firstAndLastNames:y,onError:N,forceSMS:e}).then((()=>p.default.writeFile(h,o.stringify({...v,SESSION:i.session.save()})))).then((()=>{S.info("Modified env file for next session"),S.info("Successfully connected")})).then((()=>{i.addEventHandler((e=>{P.emit(e.className,e)}))})).then((()=>P)).catch((({message:e})=>{S.error(e),process.exit(1)}))}catch({message:e}){S.error(e),process.exit(1)}};