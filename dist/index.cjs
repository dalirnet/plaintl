"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs"),s=require("lodash"),r=require("path"),t=require("dotenv"),n=require("events"),i=require("telegram"),o=require("telegram/extensions/index.js"),a=require("telegram/sessions/index.js");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var d=u(e),l=u(s),m=u(r),f=u(t),c=u(n);f.default.config();const p=new o.Logger,q=new c.default,v=(e,s)=>{p.error(s),e(new Error(s))};exports.eventEmitter=q,exports.startSession=({apiId:e,apiHash:s,forceSMS:r=!1}={})=>new Promise(((t,n)=>{try{const o=m.default.resolve(".ptl.session"),u=new a.StringSession(d.default.existsSync(o)?d.default.readFileSync(o,"utf8"):process.env.API_SESSION||""),f=new i.TelegramClient(u,l.default.toNumber(e||process.env.API_ID),l.default.toString(s||process.env.API_HASH));return f.start({phoneNumber:()=>(e=>new Promise((s=>{l.default.isEmpty(q.listeners("RequiresPhoneNumber"))&&v(e,"You need to set a listener on 'RequiresPhoneNumber' event"),q.emit("RequiresPhoneNumber",(e=>{s(e)}))})))(n),phoneCode:e=>((e,s)=>new Promise((r=>{p.info("You will receive phone code via "+(s?"App":"SMS")),l.default.isEmpty(q.listeners("RequiresPhoneCode"))&&v(e,"You need to set a listener on 'RequiresPhoneCode' event"),q.emit("RequiresPhoneCode",(e=>{r(e)}))})))(n,e),password:e=>((e,s)=>new Promise((r=>{p.info(`The hint for your password is '${s}'`),l.default.isEmpty(q.listeners("RequiresPassword"))&&v(e,"You need to set a listener on 'RequiresPassword' event"),q.emit("RequiresPassword",(e=>{r(e)}))})))(n,e),firstAndLastNames:()=>(e=>new Promise((s=>{l.default.isEmpty(q.listeners("RequiresFirstAndLastNames"))&&v(e,"You need to set a listener on 'RequiresFirstAndLastNames' event"),q.emit("RequiresFirstAndLastNames",(([e,r])=>{p.info(`First name is '${e}'`),p.info(`Last name is '${r}'`),s([e,r])}))})))(n),onError:({message:e})=>{v(n,e)},forceSMS:r}).then((()=>d.default.promises.writeFile(o,f.session.save()))).then((()=>{p.info("Successfully connected and save session"),f.addEventHandler((e=>{q.emit(e.className,e)})),t(q)})).catch((({message:e})=>{v(n,e)}))}catch({message:e}){v(n,e)}}));