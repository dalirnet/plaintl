"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs"),s=require("lodash"),r=require("path"),t=require("dotenv"),n=require("events"),o=require("telegram"),i=require("telegram/extensions/index.js"),a=require("telegram/sessions/index.js");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var d=u(e),l=u(s),m=u(r),f=u(t),c=u(n);f.default.config();const p=new c.default;exports.eventEmitter=p,exports.startSession=({apiId:e,apiHash:s,apiForceSMS:r=!1,logLevel:t="info"}={})=>{const n=new i.Logger(t),u=m.default.resolve(".ptl.session");return new Promise(((t,i)=>{try{const m=e=>{n.error(e),i(new Error(e))},f=new a.StringSession(d.default.existsSync(u)?d.default.readFileSync(u,"utf8"):process.env.API_SESSION||""),c=new o.TelegramClient(f,l.default.toNumber(e||process.env.API_ID),l.default.toString(s||process.env.API_HASH),{baseLogger:n});return c.start({phoneNumber:()=>(e=>new Promise((s=>{l.default.isEmpty(p.listeners("RequiresPhoneNumber"))&&e("You need to set a listener on 'RequiresPhoneNumber' event"),p.emit("RequiresPhoneNumber",(e=>{s(e)}))})))(m),phoneCode:e=>(n.info("You will receive phone code via "+(e?"App":"SMS")),(e=>new Promise((s=>{l.default.isEmpty(p.listeners("RequiresPhoneCode"))&&e("You need to set a listener on 'RequiresPhoneCode' event"),p.emit("RequiresPhoneCode",(e=>{s(e)}))})))(m)),password:e=>(n.info(`The hint for your password is '${e}'`),(e=>new Promise((s=>{l.default.isEmpty(p.listeners("RequiresPassword"))&&e("You need to set a listener on 'RequiresPassword' event"),p.emit("RequiresPassword",(e=>{s(e)}))})))(m)),firstAndLastNames:()=>(e=>new Promise((s=>{l.default.isEmpty(p.listeners("RequiresFirstAndLastNames"))&&e("You need to set a listener on 'RequiresFirstAndLastNames' event"),p.emit("RequiresFirstAndLastNames",((e,r=null)=>{s([e,r])}))})))(m),onError:({message:e})=>{m(e)},forceSMS:r}).then((()=>d.default.promises.writeFile(u,c.session.save()))).then((()=>{n.info("Successfully connected and save session"),c.addEventHandler((e=>{p.emit(e.className,e)})),t(c)})).catch((({message:e})=>{m(i,e)}))}catch({message:e}){handleErrorAndReject(i,e)}}))};